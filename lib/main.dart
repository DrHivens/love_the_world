import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:intl/intl.dart';

import 'package:love_the_world/floatingBubble.dart';
import 'firebase_options.dart'; // This file is auto-generated by FlutterFire

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform, // Auto-configured!
  );
  runApp(const LoveTheWorldApp());
}

class LoveTheWorldApp extends StatelessWidget {
  const LoveTheWorldApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Love the World',
      theme: ThemeData(primarySwatch: Colors.pink, fontFamily: 'Comic Sans MS'),
      home: const HomePage(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class HomePage extends StatefulWidget {
  const HomePage({super.key});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> with TickerProviderStateMixin {
  final TextEditingController _messageController = TextEditingController();
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final List<FloatingBubble> _bubbles = [];
  late AnimationController _animationController;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(
      duration: const Duration(seconds: 1),
      vsync: this,
    );
    _loadExistingMessages();
  }

  @override
  void dispose() {
    _animationController.dispose();
    _messageController.dispose();
    super.dispose();
  }

  Future<void> _loadExistingMessages() async {
    try {
      String today = DateFormat('yyyy-MM-dd').format(DateTime.now());
      QuerySnapshot snapshot = await _firestore.collection(today).get();

      for (var doc in snapshot.docs) {
        _addBubbleToScreen(doc.data() as Map<String, dynamic>);
      }
    } catch (e) {
      print('Error loading messages: $e');
    }
  }

  void _addBubbleToScreen(Map<String, dynamic> data) {
    setState(() {
      _bubbles.add(
        FloatingBubble(
          message: data['message'] ?? '',
          timestamp: data['timestamp'],
          onRemove: () {},
        ),
      );
    });
  }

  Future<void> _sendMessage() async {
    if (_messageController.text.trim().isEmpty) return;

    try {
      String today = DateFormat('yyyy-MM-dd').format(DateTime.now());
      String message = _messageController.text.trim();

      Map<String, dynamic> messageData = {
        'message': message,
        'timestamp': FieldValue.serverTimestamp(),
        'created_at': DateTime.now().millisecondsSinceEpoch,
      };

      // Add to Firebase
      await _firestore.collection(today).add(messageData);

      // Add to local bubbles
      _addBubbleToScreen({'message': message, 'timestamp': DateTime.now()});

      // Clear input
      _messageController.clear();

      // Show success animation
      _animationController.forward().then((_) {
        _animationController.reverse();
      });
    } catch (e) {
      ScaffoldMessenger.of(
        context,
      ).showSnackBar(SnackBar(content: Text('Error sending message: $e')));
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text(
          'Love the World ðŸ’•',
          style: TextStyle(fontWeight: FontWeight.bold, fontSize: 24),
        ),
        backgroundColor: Colors.pink.shade100,
        elevation: 0,
        centerTitle: true,
        actions: [
          Builder(
            builder: (context) => IconButton(
              icon: const Icon(Icons.menu),
              onPressed: () => Scaffold.of(context).openEndDrawer(),
            ),
          ),
        ],
      ),
      endDrawer: Drawer(
        child: ListView(
          padding: EdgeInsets.zero,
          children: [
            const DrawerHeader(
              decoration: BoxDecoration(
                gradient: LinearGradient(colors: [Colors.pink, Colors.purple]),
              ),
              child: Text(
                'Love the World',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 24,
                  fontWeight: FontWeight.bold,
                ),
              ),
            ),
            ListTile(
              leading: const Icon(Icons.favorite),
              title: const Text('About'),
              onTap: () {
                Navigator.pop(context);
                _showAboutDialog();
              },
            ),
            ListTile(
              leading: const Icon(Icons.clear_all),
              title: const Text('Clear Bubbles'),
              onTap: () {
                Navigator.pop(context);
                setState(() {
                  _bubbles.clear();
                });
              },
            ),
          ],
        ),
      ),
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
            colors: [Color(0xFFE8F5E8), Color(0xFFF0E8FF), Color(0xFFFFE8F0)],
          ),
        ),
        child: Stack(
          children: [
            // Floating bubbles
            ..._bubbles.map((bubble) => bubble),

            // Input area at bottom
            Positioned(
              bottom: 20,
              left: 20,
              right: 20,
              child: Container(
                padding: const EdgeInsets.symmetric(
                  horizontal: 20,
                  vertical: 15,
                ),
                decoration: BoxDecoration(
                  color: Colors.white,
                  borderRadius: BorderRadius.circular(30),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.1),
                      blurRadius: 10,
                      offset: const Offset(0, 5),
                    ),
                  ],
                ),
                child: Row(
                  children: [
                    Expanded(
                      child: TextField(
                        controller: _messageController,
                        decoration: const InputDecoration(
                          hintText: 'Input text here',
                          border: InputBorder.none,
                          hintStyle: TextStyle(
                            color: Colors.grey,
                            fontSize: 16,
                          ),
                        ),
                        style: const TextStyle(fontSize: 16),
                        maxLines: null,
                        textCapitalization: TextCapitalization.sentences,
                        onSubmitted: (_) => _sendMessage(),
                      ),
                    ),
                    const SizedBox(width: 10),
                    ScaleTransition(
                      scale: Tween<double>(begin: 1.0, end: 1.2).animate(
                        CurvedAnimation(
                          parent: _animationController,
                          curve: Curves.elasticOut,
                        ),
                      ),
                      child: GestureDetector(
                        onTap: _sendMessage,
                        child: Container(
                          padding: const EdgeInsets.all(12),
                          decoration: BoxDecoration(
                            color: Colors.pink,
                            borderRadius: BorderRadius.circular(20),
                          ),
                          child: const Icon(
                            Icons.arrow_forward,
                            color: Colors.white,
                            size: 24,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }

  void _showAboutDialog() {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        title: const Text('About Love the World'),
        content: const Text(
          'Share your love and positive messages with the world! '
          'Every message you send floats around as a beautiful bubble '
          'for others to see and enjoy. Spread kindness, one message at a time. ðŸ’•',
        ),
        actions: [
          TextButton(
            onPressed: () => Navigator.pop(context),
            child: const Text('Close'),
          ),
        ],
      ),
    );
  }
}
